AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy Gitlab instance
#----------------------------------------------
Parameters:
  #------------------
  InstanceType:
    Description: (Optional) Instance type
    Type: String
    Default: c5.large
  AmiId:
    Description: AMI ID
    Type: String
  KEYNAME:
    Type: String
  AutoRecoveryMinutes:
    Description: (optional) Auto Recovery Time(Minutes)
    Type: Number
    Default: 1
Metadata: 
  AWS::CloudFormation::Interface: 
    ParameterGroups: 
      -
        Label:
          default:  Instances
        Parameters:
          - InstanceType
          - AmiId
          - KEYNAME
          - AutoRecoveryMinutes
#----------------------------------------------
Conditions: 
  CheckAutoRecovery: !Not [!Equals [!Ref AutoRecoveryMinutes, 0 ]]
#----------------------------------------------
Resources:
  #------------------ DockerDev:
  Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref AmiId
      InstanceType: !Ref InstanceType
      KeyName: !Ref KEYNAME
      IamInstanceProfile:
        Fn::ImportValue: GitlabS3PoC-Iam-GitlabS3RolePlofile
      Monitoring: yes
      NetworkInterfaces:
        - DeviceIndex: '0'
          SubnetId:
            Fn::ImportValue: GitlabS3PoC-GitlabVPC-PrivateSubnet1Id
          GroupSet:
            - Fn::ImportValue: GitlabS3PoC-SecurityGroups-GitlabSGId
          # AssociatePublicIpAddress: true
      Tags:
        - Key: Name
          Value: GitlabPoc-Gitlab
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          # Update ALL rpms, and change hostname to Userfrendly name 
          yum -y update
          hostnamectl set-hostname "Gitlab"
  InstanceRecovery:
    Type: AWS::CloudWatch::Alarm
    Condition: CheckAutoRecovery
    Properties:
      AlarmDescription: AutoRecovery for the Proxy
      Namespace: AWS/EC2
      MetricName: StatusCheckFailed_System
      Statistic: Minimum
      Period: 60
      EvaluationPeriods: !Ref AutoRecoveryMinutes
      ComparisonOperator: GreaterThanThreshold
      Threshold: 0
      AlarmActions:
      - !Sub "arn:aws:automate:${AWS::Region}:ec2:recover"
      - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:admin"
      Dimensions:
      - Name: InstanceId
        Value: !Ref Instance
    DependsOn: Instance
  RegistDNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName:
        Fn::ImportValue: GitlabS3PoC-GitlabVPC-VpcInternalDnsName
      Comment: A record for the private IP address of a Gitlab.
      Name:
        Fn::Join:
          - ""
          - - "gitlab."
            - Fn::ImportValue: GitlabS3PoC-GitlabVPC-VpcInternalDnsName
      Type: A
      TTL: 60
      ResourceRecords:
        - !GetAtt Instance.PrivateIp
Outputs:
  #---------------- EC2 Instance
  InstanceId:
    Description: Instance ID
    Value: !Ref Instance
    Export:
      Name: !Sub ${AWS::StackName}-InstanceId
  InstancePrivateIp:
    Description: Instance PrivateIP
    Value: !GetAtt Instance.PrivateIp
    Export:
      Name: !Sub ${AWS::StackName}-InstancePrivateIp
  InstanceDns:
    Description: Instance DNS
    Value:
      Fn::Join:
        - ""
        - - "gitlab."
          - Fn::ImportValue: GitlabS3PoC-GitlabVPC-VpcInternalDnsName
    Export:
      Name: !Sub ${AWS::StackName}-InstanceDns