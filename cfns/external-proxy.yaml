AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy proxy instance
#----------------------------------------------
Parameters:
  #------------------
  InstanceType:
    Description: (Optional) Instance type
    Type: String
    Default: t2.micro
  AmiId:
    Description: AMI ID
    Type: String
  KEYNAME:
    Type: String
  AutoRecoveryMinutes:
    Description: (optional) Auto Recovery Time(Minutes)
    Type: Number
    Default: 1
Metadata: 
  AWS::CloudFormation::Interface: 
    ParameterGroups: 
      -
        Label:
          default:  Instances
        Parameters:
          - InstanceType
          - AmiId
          - KEYNAME
          - AutoRecoveryMinutes
#----------------------------------------------
Conditions: 
  CheckAutoRecovery: !Not [!Equals [!Ref AutoRecoveryMinutes, 0 ]]
#----------------------------------------------
Resources:
  #------------------ DockerDev:
  Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref AmiId
      InstanceType: !Ref InstanceType
      KeyName: !Ref KEYNAME
      Monitoring: yes
      NetworkInterfaces:
        - DeviceIndex: '0'
          SubnetId:
            Fn::ImportValue: GitlabS3PoC-ClientVPC-PublicSubnet2Id
          GroupSet:
            - Fn::ImportValue: GitlabS3PoC-SecurityGroups-ExternalProxySGId
          # AssociatePublicIpAddress: true
      Tags:
        - Key: Name
          Value: GitlabPoc-ExternalProxy
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          # Update ALL rpms, and change hostname to Userfrendly name 
          yum -y update
          hostnamectl set-hostname "external-proxy"

          #setup squid
          yum -y install squid

          #/etc/squid/squid.conf
          cat > /etc/squid/squid.conf << EOL
          # Example rule allowing access from your local networks.
          # Adapt to list your (internal) IP networks from where browsing
          # should be allowed
          acl localnet src 10.0.0.0/8     # RFC1918 possible internal network
          acl localnet src 172.16.0.0/12  # RFC1918 possible internal network
          acl localnet src 192.168.0.0/16 # RFC1918 possible internal network
          acl localnet src fc00::/7       # RFC 4193 local private network range
          acl localnet src fe80::/10      # RFC 4291 link-local (directly plugged) machines
 
          acl SSL_ports port 443 
          acl Safe_ports port 443
          acl CONNECT method CONNECT 

          # Deny requests to certain unsafe ports
          http_access deny !Safe_ports

          # Deny CONNECT to other than secure SSL ports
          http_access deny CONNECT !SSL_ports
 
          # Only allow cachemgr access from localhost 
          http_access allow localhost manager 
          http_access deny manager 
 
          # Deny access from other networks.
          http_access deny !localnet
 
          # Only allow access to whitelisted destinations.
          acl whitelist dstdomain "/etc/squid/whitelist" 
          http_access allow whitelist

          # And finally deny all other access to this proxy 
          http_access deny all 
          
          #------------------------------------------ 
          http_port 3128

          # Leave coredumps in the first cache dir
          coredump_dir /var/spool/squid
 
          # anonymouse host name
          visible_hostname unknown
          EOL

          #/etc/squid/whitelist
          cat > /etc/squid/whitelist << EOL
          #for docker Hub
          .docker.io
          docker-images-prod.s3.amazonaws.com
          
          #for pypi
          bootstrap.pypa.io
          pypi.org
          files.pythonhosted.org

          #for AWS CLI v2
          awscli.amazonaws.com

          #for google chrome
          dl.google.com

          #for debug
          .google.co.jp
          EOL

          # setup auto start
          systemctl start squid
          systemctl enable squid

  InstanceRecovery:
    Type: AWS::CloudWatch::Alarm
    Condition: CheckAutoRecovery
    Properties:
      AlarmDescription: AutoRecovery for the Proxy
      Namespace: AWS/EC2
      MetricName: StatusCheckFailed_System
      Statistic: Minimum
      Period: 60
      EvaluationPeriods: !Ref AutoRecoveryMinutes
      ComparisonOperator: GreaterThanThreshold
      Threshold: 0
      AlarmActions:
      - !Sub "arn:aws:automate:${AWS::Region}:ec2:recover"
      - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:admin"
      Dimensions:
      - Name: InstanceId
        Value: !Ref Instance
    DependsOn: Instance
Outputs:
  #---------------- EC2 Instance
  InstanceId:
    Description: Instance ID
    Value: !Ref Instance
    Export:
      Name: !Sub ${AWS::StackName}-InstanceId
  InstancePrivateIp:
    Description: Instance PrivateIP
    Value: !GetAtt Instance.PrivateIp
    Export:
      Name: !Sub ${AWS::StackName}-InstancePrivateIp