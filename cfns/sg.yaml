AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy Security Group
#-------------------------------------------------------
Parameters:
  #------------------
  AllowRpdCidr:
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 0.0.0.0/0
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be like 10.1.0.0/16
Resources:
  GitlabSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: GitlabVPC-InstanceSG
      GroupDescription: SG for Gitlab instances
      VpcId: 
        Fn::ImportValue: GitlabS3PoC-GitlabVPC-VpcId
      Tags:
        - Key: Name
          Value: GitlabVPC-InstanceSG
  GitlabSGReceivGitlabPort:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref GitlabSG
      IpProtocol: tcp
      FromPort: 9010
      ToPort: 9011
      CidrIp: 0.0.0.0/0
  GitlabSGReceivSsh:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref GitlabSG
      IpProtocol: tcp
      FromPort: 22
      ToPort: 22
      CidrIp: 0.0.0.0/0
  #--
  RdsSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: GitlabVPC-RdsSG
      GroupDescription: SG for RDS
      VpcId: 
        Fn::ImportValue: GitlabS3PoC-GitlabVPC-VpcId
      Tags:
        - Key: Name
          Value: GitlabVPC-RdsSG
  RdsSGReceivPstgreSQL:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref RdsSG
      IpProtocol: tcp
      FromPort: 5432
      ToPort: 5432
      SourceSecurityGroupId: !Ref GitlabSG
  #--
  ClientSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: ClientVPC-InstanceSG
      GroupDescription: SG for Client and bashtion instances
      VpcId: 
        Fn::ImportValue: GitlabS3PoC-ClientVPC-VpcId
      Tags:
        - Key: Name
          Value: ClientVPC-InstanceSG
  ClientSGReceivSsh:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref ClientSG
      IpProtocol: tcp
      FromPort: 22
      ToPort: 22
      CidrIp: 0.0.0.0/0
  ClientSGReceivRdp1:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref ClientSG
      IpProtocol: tcp
      FromPort: 3389
      ToPort: 3389
      CidrIp: 10.0.0.0/8
  ClientSGReceivRdp2:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref ClientSG
      IpProtocol: tcp
      FromPort: 3389
      ToPort: 3389
      CidrIp: !Ref AllowRpdCidr
  #--
  ExternalProxySG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: ClientVPC-ExternalProxySG
      GroupDescription: SG for external proxy instances
      VpcId: 
        Fn::ImportValue: GitlabS3PoC-ClientVPC-VpcId
      Tags:
        - Key: Name
          Value: ClientVPC-ExternalProxySG
  ExternalProxySGSsh:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref ExternalProxySG
      IpProtocol: tcp
      FromPort: 22
      ToPort: 22
      CidrIp: 0.0.0.0/0
  ExternalProxySGSProxy:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref ExternalProxySG
      IpProtocol: tcp
      FromPort: 3128
      ToPort: 3128
      CidrIp: 10.0.0.0/8
Outputs:
  #------------------ VPC
  GitlabSGId:
    Description:  GitlabSG ID
    Value: !Ref GitlabSG
    Export:
      Name: !Sub "${AWS::StackName}-GitlabSGId"
  RdsSGId:
    Description:  RdsSG ID
    Value: !Ref RdsSG
    Export:
      Name: !Sub "${AWS::StackName}-RdsSGId"
  ClientSGId:
    Description:  ClientSG ID
    Value: !Ref ClientSG
    Export:
      Name: !Sub "${AWS::StackName}-ClientSGId"
  ExternalProxySGId:
    Description:  ExternalProxySG ID
    Value: !Ref ExternalProxySG
    Export:
      Name: !Sub "${AWS::StackName}-ExternalProxySGId"